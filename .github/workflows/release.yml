name: Deploy

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

permissions:
  contents: write

jobs:
  build-and-upload:
    name: Build and upload
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        include:
          - os: "windows"
            target: x86_64-pc-windows-msvc
          - os: "macos"
            target: aarch64-apple-darwin
          - os: "linux"
            target: x86_64-unknown-linux-gnu
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4

      - uses: ./
        name: Run dtolnay/rust-toolchain@stable
        with:
          targets: "${{ matrix.target }}"

      - name: Get required tools
        run: cargo install cargo-deny && rustup component add clippy

      - name: Get the release version from the tag
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --verbose --release --target ${{ matrix.target }}

      - name: Test
        run: cargo test --release --verbose

      - name: Security advisory checks
        uses: rustsec/audit-check@v1.4.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: License check
        run: cargo deny -L debug --all-features --locked check

      - name: Build archive
        shell: bash
        run: |
          # Replace with the name of your binary
          binary_name="qt-ts-tools"

          dirname="$binary_name-${{ env.VERSION }}-${{ matrix.target }}"
          mkdir "$dirname"
          
          cp "LICENSE-MIT" "$dirname/."
          cp "LICENSE-APACHE" "$dirname/."
          
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            mv "target/${{ matrix.os }}/release/$binary_name.exe" "$dirname"
          else
            mv "target/${{ matrix.os }}/release/$binary_name" "$dirname"
          fi

          if [ ! -f CHANGES.md ]; then
            changes="$(cat CHANGELOG.md | awk '/^## /{block++} {if (block==1) {print}}')"
            echo "$changes" > CHANGES.md
            echo "
            " >> CHANGES.md
            echo "### Checksums" >> CHANGES.md
            echo "
            " >> CHANGES.md
            echo "All checksums are in sha256" >> CHANGES.md
            echo "
            " >> CHANGES.md
          fi

          asset_name=""
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            7z a "$dirname.zip" "$dirname"
            asset_name="$dirname.zip"
            echo "ASSET=$dirname.zip" >> $GITHUB_ENV
            checksum=sha256sum $asset_name
            echo "${{ matrix.os }}: `$asset_name`: `$checkshum`" >> CHANGES.md
          else
            tar -czf "$dirname.tar.gz" "$dirname"
            asset_name="$dirname.tar.gz"
            echo "ASSET=$dirname.tar.gz" >> $GITHUB_ENV
            checksum=sha256sum $asset_name
            echo "${{ matrix.os }}: `$asset_name`: `$checkshum`" >> CHANGES.md
          fi

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          body_path: CHANGES.md
          files: |
            ${{ env.ASSET }}